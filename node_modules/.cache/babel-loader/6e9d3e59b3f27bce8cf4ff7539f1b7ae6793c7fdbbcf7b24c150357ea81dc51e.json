{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  const [isBackgroundDark, setIsBackgroundDark] = useState(false);\n  const handleButtonClick = () => {\n    setIsBackgroundDark(!isBackgroundDark);\n  };\n  const backgroundColor = isBackgroundDark ? 'black' : 'white';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: backgroundColor,\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is my component with a background color that changes based on a boolean value in state.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Change Background Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(MyComponent, \"PqBSyGob9lyJYPZEud52ukfaGfM=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyComponent","_s","isBackgroundDark","setIsBackgroundDark","handleButtonClick","backgroundColor","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/React/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction MyComponent() {\r\n  const [isBackgroundDark, setIsBackgroundDark] = useState(false);\r\n\r\n  const handleButtonClick = () => {\r\n    setIsBackgroundDark(!isBackgroundDark);\r\n  };\r\n\r\n  const backgroundColor = isBackgroundDark ? 'black' : 'white';\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: backgroundColor,\r\n        padding: '20px',\r\n        textAlign: 'center'\r\n      }}\r\n    >\r\n      <h1>My Component</h1>\r\n      <p>This is my component with a background color that changes based on a boolean value in state.</p>\r\n      <button onClick={handleButtonClick}>Change Background Color</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EACxC,CAAC;EAED,MAAMG,eAAe,GAAGH,gBAAgB,GAAG,OAAO,GAAG,OAAO;EAE5D,oBACEH,OAAA;IACEO,KAAK,EAAE;MACLD,eAAe,EAAEA,eAAe;MAChCE,OAAO,EAAE,MAAM;MACfC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,gBAEFV,OAAA;MAAAU,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrBd,OAAA;MAAAU,QAAA,EAAG;IAA4F;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACnGd,OAAA;MAAQe,OAAO,EAAEV,iBAAkB;MAAAK,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEV;AAACZ,EAAA,CAtBQD,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAwBpB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}